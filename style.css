import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from "recharts";

export default function DEXROICalculator() {
  const [inputs, setInputs] = useState({
    initialTickets: "",
    finalTickets: "",
    costPerTicket: ""
  });

  const [roiData, setRoiData] = useState(null);

  const handleChange = (e) => {
    setInputs({ ...inputs, [e.target.name]: e.target.value });
  };

  const calculateROI = () => {
    const Q0 = parseFloat(inputs.initialTickets);
    const Qx = parseFloat(inputs.finalTickets);
    const cost = parseFloat(inputs.costPerTicket);
    if (!Q0 || !Qx || !cost || Q0 <= 0) return;
    const volumeDropPercent = ((Q0 - Qx) / Q0) * 100;
    const costSavings = (Q0 - Qx) * cost;

    setRoiData({
      volumeDropPercent: volumeDropPercent.toFixed(2),
      costSavings: costSavings.toFixed(2),
      chartData: [
        { name: "Initial", Tickets: Q0 },
        { name: "Final", Tickets: Qx }
      ]
    });
  };

  return (
    <div className="p-4 max-w-xl mx-auto">
      <h2 className="text-xl font-semibold mb-4">DEX ROI Calculator</h2>
      <Card className="mb-4">
        <CardContent className="grid gap-4">
          <Input
            name="initialTickets"
            type="number"
            placeholder="Initial Ticket Volume (Q0)"
            value={inputs.initialTickets}
            onChange={handleChange}
          />
          <Input
            name="finalTickets"
            type="number"
            placeholder="Final Ticket Volume (Qx)"
            value={inputs.finalTickets}
            onChange={handleChange}
          />
          <Input
            name="costPerTicket"
            type="number"
            placeholder="Cost per Ticket ($)"
            value={inputs.costPerTicket}
            onChange={handleChange}
          />
          <Button onClick={calculateROI}>Calculate ROI</Button>
        </CardContent>
      </Card>

      {roiData && (
        <Card>
          <CardContent>
            <p>ðŸ“‰ Ticket Volume Reduction: {roiData.volumeDropPercent}%</p>
            <p>ðŸ’° Cost Savings: ${roiData.costSavings}</p>
            <div className="h-64 mt-4">
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={roiData.chartData}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="name" />
                  <YAxis />
                  <Tooltip />
                  <Line type="monotone" dataKey="Tickets" stroke="#8884d8" strokeWidth={2} />
                </LineChart>
              </ResponsiveContainer>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
